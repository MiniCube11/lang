LPAREN = '('
RPAREN = ')'
LCURL = '{'
RCURL = '}'
PLUS = '+'
MINUS = '-'
MUL = '*'
DIV = '/'
QUOTATION = '"'
EQUAL = '='
GREATERTHAN = '>'
LESSTHAN = '<'
NOT = '!'
EQEQUAL = '=='
GREATEREQUAL = '>='
LESSEQUAL = '<='
NOTEQUAL = '!='
AMPER = '&'
VBAR = '|'
AND = '&&'
OR = '||'

IF = 'if'
ELSE = 'else'
WHILE = 'while'

NEWLINE = '\n'

C_LPAREN = "LPAREN"
C_RPAREN = "RPAREN"
C_LCURL = "LCURL"
C_RCURL = "RCURL"
C_PLUS = "PLUS"
C_MINUS = "MINUS"
C_MUL = "MUL"
C_DIV = "DIV"
C_EQUAL = "EQUAL"
C_GREATERTHAN = "GREATERTHAN"
C_LESSTHAN = "LESSTHAN"
C_NOT = "NOT"
C_EQEQUAL = "EQEQUAL"
C_GREATEREQUAL = "GREATEREQUAL"
C_LESSEQUAL = "LESSEQUAL"
C_NOTEQUAL = "NOTEQUAL"
C_NUMBER = "NUMBER"
C_STRING = "STRING"
C_IDENTIFIER = "IDENTIFIER"
C_AMPER = "AMPER"
C_VBAR = "VBAR"
C_OR = "OR"
C_AND = "AND"

C_KEYWORD = "KEYWORD"
C_IF = "IF"
C_ELSE = "ELSE"
C_WHILE = "WHILE"

C_EOF = "EOF"

SINGLE_CHAR_TOKENS = {
    LPAREN: C_LPAREN,
    RPAREN: C_RPAREN,
    LCURL: C_LCURL,
    RCURL: C_RCURL,
    PLUS: C_PLUS,
    MINUS: C_MINUS,
    MUL: C_MUL,
    DIV: C_DIV
}

COMP_OPERATORS = {
    GREATERTHAN: C_GREATERTHAN,
    LESSTHAN: C_LESSTHAN,
    EQEQUAL: C_EQEQUAL,
    GREATEREQUAL: C_GREATEREQUAL,
    LESSEQUAL: C_LESSEQUAL
}

BOOL_OPERATORS = {
    OR: C_OR,
    AND: C_AND
}

KEYWORDS = {
    IF: C_IF,
    ELSE: C_ELSE,
    WHILE: C_WHILE
}

BOOL_OPERATOR_CHARS = {AMPER, VBAR}
OPERATORS = {PLUS, MINUS, MUL, DIV}
C_OPERATORS = {C_PLUS, C_MINUS, C_MUL, C_DIV}
